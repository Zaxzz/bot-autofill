name: Rubin Auto Fill (auto)

on:
  schedule:
    # jalan tiap 5 menit pada 20:00–22:59 WIB (UTC+7 == 13–15 UTC)
    - cron: "*/5 13-15 * * *"
  # manual tetap ada tapi tidak diperlukan; tidak mem-bypass gate
  workflow_dispatch: {}

jobs:
  run-bot:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Gate: pilih 1 menit acak di 20–23 WIB (sekali/hari)
        id: gate
        shell: bash
        run: |
          set -e
          # waktu Jakarta (WIB)
          NOW_H=$(TZ=Asia/Jakarta date +%H)
          NOW_M=$(TZ=Asia/Jakarta date +%M)
          TODAY=$(TZ=Asia/Jakarta date +%F)

          # pilih 1 menit acak stabil per hari dalam rentang 20:00–22:59 (180 menit)
          # seed pakai tanggal agar berubah tiap hari
          IDX=$(printf "%s" "$TODAY" | sha1sum | awk '{print "0x" substr($1,1,4)}')
          SLOT=$(( IDX % 180 ))                 # 0..179
          TARGET_H=$(( 20 + (SLOT / 60) ))      # 20,21,22
          TARGET_M=$(( SLOT % 60 ))             # 00..59

          echo "Target WIB  = $(printf '%02d:%02d' ${TARGET_H} ${TARGET_M})"
          echo "Sekarang WIB = $(printf '%02d:%02d' ${NOW_H} ${NOW_M})"

          # toleransi 1 menit agar tidak miss karena delay runner
          SHOULD_RUN=0
          if [ "$NOW_H" -eq "$TARGET_H" ]; then
            DIFF=$(( 10#$NOW_M - 10#$TARGET_M ))
            [ $DIFF -ge -1 ] && [ $DIFF -le 1 ] && SHOULD_RUN=1
          fi

          echo "should_run=${SHOULD_RUN}" >> "$GITHUB_OUTPUT"
          [ "$SHOULD_RUN" = "1" ] && echo "RUN ✅" || echo "SKIP ⏭️"

      - name: Setup Chrome
        if: steps.gate.outputs.should_run == '1'
        uses: browser-actions/setup-chrome@v1
        id: chrome

      - name: Setup Python
        if: steps.gate.outputs.should_run == '1'
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install deps
        if: steps.gate.outputs.should_run == '1'
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt || pip install selenium webdriver-manager

      - name: Run bot (retry)
        if: steps.gate.outputs.should_run == '1'
        env:
          RUBIN_EMAIL: ${{ secrets.RUBIN_EMAIL }}
          RUBIN_PASS:  ${{ secrets.RUBIN_PASS }}
        shell: bash
        run: |
          set -e
          for i in 1 2 3; do
            echo "Attempt $i..."
            python bot.py  || python main.py  && exit 0
            echo "Retrying in 10s..."; sleep 10
          done
          echo "Failed after retries"; exit 1

      - name: Upload screenshots (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: |
            screenshots/**
            *.png
